<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    package="io.sideswap">
    <uses-permission android:name="android.permission.INTERNET"/>
    <!-- <uses-permission android:name="android.permission.READ_CONTACTS" /> -->
    <uses-permission android:name="android.permission.VIBRATE" />

    <!-- Enable this if you want to access to all default packages (like camera) in sdk>=30 -->
    <!-- <uses-permission android:name="android.permission.QUERY_ALL_PACKAGES"/> -->

    <!-- advertise Google Play that your application depends on having a camera but not required it -->
    <uses-feature android:name="android.hardware.camera" android:required="false" />
    <uses-feature android:name="android.hardware.camera.autofocus" android:required="false" />

    <!--
        Required for Jade BLE connection.
        ACCESS_FINE_LOCATION is only required on Android 11 and lower.
        See https://developer.android.com/develop/connectivity/bluetooth/bt-permissions#assert-never-for-location for reference.
    -->
    <uses-permission android:name="android.permission.BLUETOOTH"/>
    <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"/>
    <uses-permission android:name="android.permission.BLUETOOTH_SCAN" android:usesPermissionFlags="neverForLocation" />
    <uses-permission android:name="android.permission.ACCESS_FINE_LOCATION" />

    <queries>
        <intent>
            <action android:name="android.intent.action.VIEW" />
            <category android:name="android.intent.category.BROWSABLE" />
            <data android:scheme="https" />
        </intent>
        <!-- if targetSdkVer and compileSdkVer >= 30 this action needs to be added for opening system camera -->
        <!-- [If you don't want to display in your app that a camera is not available]-->
        <intent>
            <action android:name="android.media.action.IMAGE_CAPTURE" />
        </intent>
    </queries>

    <application
        android:label="SideSwap"
        android:icon="@mipmap/launcher_icon"
        android:allowBackup="false"
        android:extractNativeLibs="true"
        >
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_icon"
            android:resource="@mipmap/notification_icon"
        />
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_color"
            android:resource="@color/NotificationIconColor"
        />
        <meta-data
            android:name="com.google.firebase.messaging.default_notification_channel_id"
            android:value="sideswap_channel_id"
        />
        <activity
            android:screenOrientation="portrait"
            android:name=".MainActivity"
            android:launchMode="singleInstance"
            android:exported="true"
            android:allowTaskReparenting="true"
            android:theme="@style/LaunchTheme"
            android:configChanges="orientation|keyboardHidden|keyboard|screenSize|smallestScreenSize|locale|layoutDirection|fontScale|screenLayout|density|uiMode"
            android:hardwareAccelerated="true"
            android:windowSoftInputMode="adjustResize"
            android:allowBackup="false"
            android:fullBackupContent="false"> <!-- or true and https://github.com/mogol/flutter_secure_storage/issues/43#issuecomment-471642126 -->
            <!-- Specifies an Android theme to apply to this Activity as soon as
                 the Android process has started. This theme is visible to the user
                 while the Flutter UI initializes. After that, this theme continues
                 to determine the Window background behind the Flutter UI. -->
            <meta-data
              android:name="io.flutter.embedding.android.NormalTheme"
              android:resource="@style/NormalTheme"
              />
            <!-- Displays an Android View that continues showing the launch screen
                 Drawable until Flutter paints its first frame, then this splash
                 screen fades out. A splash screen is useful to avoid any visual
                 gap between the end of Android's launch screen and the painting of
                 Flutter's first frame. -->
            <meta-data
              android:name="io.flutter.embedding.android.SplashScreenDrawable"
              android:resource="@drawable/launch_background"
            />
            <intent-filter>
                <action android:name="android.intent.action.MAIN"/>
                <category android:name="android.intent.category.LAUNCHER"/>
            </intent-filter>
            <intent-filter>
                <action android:name="FLUTTER_NOTIFICATION_CLICK" />
                <category android:name="android.intent.category.DEFAULT" />
            </intent-filter>

            <intent-filter android:autoVerify="true">
                <action android:name="android.intent.action.VIEW" />
                <category android:name="android.intent.category.DEFAULT" />
                <category android:name="android.intent.category.BROWSABLE" />
                <data android:scheme="https" android:host="app.sideswap.io" android:pathPrefix="/" />
            </intent-filter>

        </activity>
        <!-- Don't delete the meta-data below.
             This is used by the Flutter tool to generate GeneratedPluginRegistrant.java -->
        <meta-data
            android:name="flutterEmbedding"
            android:value="2" />
    </application>
</manifest>
