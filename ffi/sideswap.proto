syntax = "proto2";
package sideswap.proto;

enum ActivePage {
  OTHER = 0;
  PEG_IN = 1;
  PEG_OUT = 2;
}

enum AssetType {
  BASE = 1;
  QUOTE = 2;
}

enum MarketType_ {
  STABLECOIN = 1;
  AMP = 2;
  TOKEN = 3;
}

enum TradeDir {
  SELL = 1;
  BUY = 2;
}

message Empty {
}

message Account {
  required int32 id = 1;
}

message Address {
  required string addr = 1;
}

message AddressAmount {
  required string address = 1;
  required int64 amount = 2;
  required string asset_id = 3;
}

message Balance {
  required string asset_id = 1;
  required int64 amount = 2;
}

message AmpAssetRestrictions {
  repeated string allowed_countries = 1;
}

message Asset {
  required string asset_id = 1;
  required string name = 2;
  required string ticker = 3;
  required string icon = 4;
  required uint32 precision = 5;
  required bool instant_swaps = 11;
  required bool swap_market = 6;
  required bool amp_market = 9;
  required bool unregistered = 8;
  optional string domain = 7;
  optional string domain_agent = 10;
  optional string domain_agent_link = 13;
  optional bool always_show = 12;
  optional bool payjoin = 15;
  optional AmpAssetRestrictions amp_asset_restrictions = 14;
}

message Tx {
  repeated Balance balances = 1;
  required string txid = 2;
  required int64 network_fee = 3;
  required int64 vsize = 6;
  required string memo = 4;
  repeated Balance balances_all = 7;
}

message Peg {
  required bool is_peg_in = 1;
  required int64 amount_send = 2;
  required int64 amount_recv = 3;
  required string addr_send = 4;
  required string addr_recv = 5;
  required string txid_send = 6;
  optional string txid_recv = 8;
}

message Confs {
  required uint32 count = 1;
  required uint32 total = 2;
}

message TransItem {
  required string id = 1;
  required int64 created_at = 2;
  optional Confs confs = 3;
  required Account account = 4;

  oneof item {
    Tx tx = 10;
    Peg peg = 11;
  }
}

message AssetId {
  required string asset_id = 1;
}

message GenericResponse {
  required bool success = 1;
  optional string error_msg = 2;
}

message FeeRate {
  required int32 blocks = 1;
  required double value = 2;
}

message ServerStatus {
  required int64 min_peg_in_amount = 1;
  required int64 min_peg_out_amount = 2;
  required double server_fee_percent_peg_in = 3;
  required double server_fee_percent_peg_out = 4;
  repeated FeeRate bitcoin_fee_rates = 5;
}

message OutPoint {
  required string txid = 1;
  required uint32 vout = 2;
}

message CreateTx {
  repeated AddressAmount addressees = 1;
  required Account account = 2;
  repeated OutPoint utxos = 3;
  optional string fee_asset_id = 4;
  optional uint32 deduct_fee_output = 5;
}

message CreatedTx {
  required string id = 9;
  required CreateTx req = 1;
  required int32 input_count = 2;
  required int32 output_count = 3;
  required int64 size = 4;
  required int64 vsize = 7;
  required int64 discount_vsize = 11;
  required int64 network_fee = 5;
  optional int64 server_fee = 10;
  required double fee_per_byte = 6;
  repeated AddressAmount addressees = 8;
}

message ChartPoint {
  required string time = 1;
  required double open = 2;
  required double close = 3;
  required double high = 4;
  required double low = 5;
  required double volume = 6;
}

message AssetPair {
  // Base asset id
  required string base = 1;
  // Quote asset id
  required string quote = 2;
}

message MarketInfo {
  required AssetPair asset_pair = 1;
  required AssetType fee_asset = 2;
  required MarketType_ type = 3;
}

message OrderId {
  required uint64 id = 1;
}

message PublicOrder {
  required OrderId order_id = 1;
  required AssetPair asset_pair = 2;
  required TradeDir trade_dir = 3;
  required uint64 amount = 4;
  required double price = 5;
  required bool two_step = 6;
}

message OwnOrder {
  required OrderId order_id = 1;
  required AssetPair asset_pair = 2;
  required TradeDir trade_dir = 3;
  required uint64 orig_amount = 4;
  required uint64 active_amount = 5;
  required double price = 6;
  optional double price_tracking = 10;
  optional string private_id = 7;
  optional uint64 ttl_seconds = 8;
  required bool two_step = 9;
}

enum HistStatus {
  MEMPOOL = 1;
  CONFIRMED = 2;
  TX_CONFLICT = 3;
  TX_NOT_FOUND = 4;
  ELAPSED = 5;
  CANCELLED = 6;
  UTXO_INVALIDATED = 7;
  REPLACED = 8;
}

message HistoryOrder {
  required uint64 id = 1;
  required OrderId order_id = 2;
  required AssetPair asset_pair = 3;
  required TradeDir trade_dir = 4;
  required uint64 base_amount = 5;
  required uint64 quote_amount = 6;
  required double price = 7;
  required HistStatus status = 8;
  optional string txid = 9;
}

message To {
  message Login {
    oneof wallet {
      string mnemonic = 1;
      string jade_id = 7;
    }
    optional string phone_key = 2;
  }

  message NetworkSettings {
    message Custom {
      required string host = 1;
      required int32 port = 2;
      required bool use_tls = 3;
    }

    oneof selected {
      Empty blockstream = 1;
      Empty sideswap = 2;
      Empty sideswap_cn = 3;
      Custom custom = 4;
    }
  }

  message ProxySettings {
    message Proxy {
      required string host = 1;
      required int32 port = 2;
    }

    optional Proxy proxy = 1;
  }

  message EncryptPin {
    required string pin = 1;
    required string mnemonic = 2;
  }

  message DecryptPin {
    required string pin = 1;
    required string salt = 2;
    required string encrypted_data = 3;
    required string pin_identifier = 4;
    optional string hmac = 5;
  }

  message AppState {
    required bool active = 1;
  }

  message SwapRequest {
    required bool send_bitcoins = 1;
    required string asset = 2;
    required int64 send_amount = 3;
    required int64 recv_amount = 4;
    required double price = 5;
  }

  message PegInRequest {
  }

  message PegOutAmount {
    required int64 amount = 1;
    required bool is_send_entered = 2;
    required double fee_rate = 3;
    required Account account = 4;
  }

  message PegOutRequest {
    required int64 send_amount = 1;
    required int64 recv_amount = 2;
    required bool is_send_entered = 4;
    required double fee_rate = 5;
    required string recv_addr = 6;
    required int32 blocks = 7;
    required Account account = 8;
  }

  message SetMemo {
    required Account account = 1;
    required string txid = 2;
    required string memo = 3;
  }

  message SendTx {
    required Account account = 1;
    required string id = 2;
  }

  message BlindedValues {
    required string txid = 1;
  }

  message UpdatePushToken {
    required string token = 1;
  }

  message SubscribePriceStream {
    required string asset_id = 1;
    required bool send_bitcoins = 2;
    optional int64 send_amount = 3;
    optional int64 recv_amount = 4;
  }

  message GaidStatus {
    required string gaid = 1;
    required string asset_id = 2;
  }

  message OrderSubmit {
    required AssetPair asset_pair = 1;
    required uint64 base_amount = 2;
    optional double price = 3;
    optional double price_tracking = 9;
    required TradeDir trade_dir = 4;
    optional uint64 ttl_seconds = 5;
    required bool two_step = 6;
    optional bool tx_chaining_allowed = 7;
    required bool private = 8;
  }

  message OrderEdit {
    required OrderId order_id = 1;
    optional uint64 base_amount = 2;
    optional double price = 3;
    optional double price_tracking = 4;
  }

  message OrderCancel {
    required OrderId order_id = 1;
  }

  message StartQuotes {
    required AssetPair asset_pair = 1;
    required AssetType asset_type = 2;
    required uint64 amount = 3;
    required TradeDir trade_dir = 4;
  }

  message StartOrder {
    required uint64 order_id = 1;
    optional string private_id = 2;
  }

  message AcceptQuote {
    required uint64 quote_id = 1;
  }

  message LoadHistory {
    optional uint64 start_time = 1;
    optional uint64 end_time = 2;
    optional uint32 skip = 3;
    optional uint32 count = 4;
  }

  oneof msg {
    Login login = 1;
    Empty logout = 2;
    NetworkSettings network_settings = 9;
    ProxySettings proxy_settings = 7;
    UpdatePushToken update_push_token = 3;
    EncryptPin encrypt_pin = 4;
    DecryptPin decrypt_pin = 5;
    string push_message = 6;
    AppState app_state = 8;
    ActivePage active_page = 19;

    SetMemo set_memo = 10;
    Account get_recv_address = 11;
    CreateTx create_tx = 12;
    SendTx send_tx = 13;
    BlindedValues blinded_values = 14;
    Account load_utxos = 17;
    Account load_addresses = 18;

    SwapRequest swap_request = 20;
    PegInRequest peg_in_request = 21;
    PegOutAmount peg_out_amount = 24;
    PegOutRequest peg_out_request = 22;

    AssetId asset_details = 57;
    SubscribePriceStream subscribe_price_stream = 58;
    Empty unsubscribe_price_stream = 59;

    Empty portfolio_prices = 62;
    Empty conversion_rates = 63;

    Empty jade_rescan = 71;
    Empty jade_unlock = 72;

    GaidStatus gaid_status = 81;

    AssetPair market_subscribe = 100;
    Empty market_unsubscribe = 101;

    OrderSubmit order_submit = 102;
    OrderEdit order_edit = 103;
    OrderCancel order_cancel = 104;

    StartQuotes start_quotes = 110;
    StartOrder start_order = 113;
    Empty stop_quotes = 111;
    AcceptQuote accept_quote = 112;

    AssetPair charts_subscribe = 120;
    Empty charts_unsubscribe = 121;

    LoadHistory load_history = 130;
  }
}

message From {
  message Login {
    oneof result {
      string error_msg = 1;
      Empty success = 2;
    }
  }

  message EnvSettings {
    required string policy_asset_id = 1;
    required string usdt_asset_id = 2;
    required string eurx_asset_id = 3;
  }

  message EncryptPin {
    message Data {
      required string salt = 2;
      required string encrypted_data = 3;
      required string pin_identifier = 4;
      optional string hmac = 5;
    }
    oneof result {
      string error = 1;
      Data data = 2;
    }
  }

  message DecryptPin {
    enum ErrorCode {
      WRONG_PIN = 1;
      NETWORK_ERROR = 2;
      INVALID_DATA = 3;
    }

    message Error {
      required string error_msg = 1;
      required ErrorCode error_code = 2;
    }

    oneof result {
      Error error = 1;
      string mnemonic = 2;
    }
  }

  message RegisterAmp {
    oneof result {
      string amp_id = 1;
      string error_msg = 2;
    }
  }

  message AmpAssets {
    repeated string assets = 1;
  }

  message UpdatedTxs {
    repeated TransItem items = 1;
  }

  message RemovedTxs {
    repeated string txids = 1;
  }

  message UpdatedPegs {
    required string order_id = 1;
    repeated TransItem items = 2;
  }

  message BalanceUpdate {
    required Account account = 1;
    repeated Balance balances = 2;
  }

  message PeginWaitTx {
    required string peg_addr = 5;
    required string recv_addr = 6;
  }

  message PegOutAmount {
    message Amounts {
      required int64 send_amount = 1;
      required int64 recv_amount = 2;
      required bool is_send_entered = 4;
      required double fee_rate = 5;
      required Account account = 6;
    }

    oneof result {
      string error_msg = 1;
      Amounts amounts = 2;
    }
  }

  message RecvAddress {
    required Address addr = 1;
    required Account account = 2;
  }

  message LoadUtxos {
    message Utxo {
      required string txid = 1;
      required uint32 vout = 2;
      required string asset_id = 3;
      required uint64 amount = 4;
      required string address = 5;
      required bool is_internal = 6;
      required bool is_confidential = 7;
    }

    required Account account = 1;
    repeated Utxo utxos = 2;
    optional string error_msg = 3;
  }

  message LoadAddresses {
    message Address {
      required string address = 1;
      required string unconfidential_address = 4;
      required uint32 index = 2;
      required bool is_internal = 3;
    }

    required Account account = 1;
    repeated Address addresses = 2;
    optional string error_msg = 3;
  }

  message CreateTxResult {
    oneof result {
      string error_msg = 1;
      CreatedTx created_tx = 2;
    }
  }

  message SendResult {
    oneof result {
      string error_msg = 1;
      TransItem tx_item = 2;
    }
  }

  message BlindedValues {
    required string txid = 1;
    oneof result {
      string error_msg = 2;
      string blinded_values = 3;
    }
  }

  message PriceUpdate {
    required string asset = 1;
    required double bid = 2;
    required double ask = 3;
  }

  message SubscribedValue {
    oneof result {
      uint64 peg_in_min_amount = 1;
      uint64 peg_in_wallet_balance = 2;
      uint64 peg_out_min_amount = 3;
      uint64 peg_out_wallet_balance = 4;
    }
  }

  message ShowMessage {
    required string text = 1;
  }

  message ShowInsufficientFunds {
    required string asset_id = 1;
    required int64 available = 2;
    required int64 required = 3;
  }

  message AssetDetails {
    message Stats {
      required int64 issued_amount = 1;
      required int64 burned_amount = 2;
      required int64 offline_amount = 4;
      required bool has_blinded_issuances = 3;
    }
    required string asset_id = 1;
    optional Stats stats = 2;
    optional string chart_url = 3;
  }

  message UpdatePriceStream {
    required string asset_id = 1;
    required bool send_bitcoins = 2;
    optional int64 send_amount = 3;
    optional int64 recv_amount = 4;
    optional double price = 5;
    optional string error_msg = 6;
  }

  message LocalMessage {
    required string title = 1;
    required string body = 2;
  }

  message PortfolioPrices {
    map<string, double> prices_usd = 1;
  }

  message ConversionRates {
    map<string, double> usd_conversion_rates = 1;
  }

  message JadePorts {
    message Port {
      required string jade_id = 1;
      required string port = 2;
    }

    repeated Port ports = 1;
  }

  message JadeStatus {
    enum Status {
      CONNECTING = 9;
      IDLE = 1;
      READ_STATUS = 2;
      AUTH_USER = 3;
      MASTER_BLINDING_KEY = 5;
      SIGN_MESSAGE = 10;

      SIGN_TX = 4;
      SIGN_SWAP = 8;
      SIGN_SWAP_OUTPUT = 6;
      SIGN_OFFLINE_SWAP = 7;
    }
    required Status status = 1;
  }

  message GaidStatus {
    required string gaid = 1;
    required string asset_id = 2;
    optional string error = 3;
  }

  message MarketList {
    repeated MarketInfo markets = 1;
  }

  message PublicOrders {
    required AssetPair asset_pair = 1;
    repeated PublicOrder list = 2;
  }

  message MinMarketAmounts {
    required uint64 lbtc = 1;
    required uint64 usdt = 2;
    required uint64 eurx = 3;
  }

  message OwnOrders {
    repeated OwnOrder list = 1;
  }

  message MarketPrice {
    required AssetPair asset_pair = 1;
    optional double ind_price = 2;
    optional double last_price = 3;
  }

  message OrderSubmit {
    message UnregisteredGaid {
      required string domain_agent = 1;
    }

    oneof result {
      OwnOrder submit_succeed = 1;
      string error = 2;
      UnregisteredGaid unregistered_gaid = 3;
    }
  }

  message StartOrder {
    message Success {
      required AssetPair asset_pair = 1;
      required TradeDir trade_dir = 2;
      required uint64 amount = 3;
      required double price = 4;
    }

    required uint64 order_id = 5;

    oneof result {
      Success success = 1;
      string error = 2;
    }
  }

  message Quote {
    message Success {
      required uint64 quote_id = 1;
      required uint64 base_amount = 2;
      required uint64 quote_amount = 3;
      required uint64 server_fee = 4;
      required uint64 fixed_fee = 5;
      required uint64 ttl_milliseconds = 6;
    }

    message LowBalance {
      required uint64 base_amount = 1;
      required uint64 quote_amount = 2;
      required uint64 server_fee = 3;
      required uint64 fixed_fee = 4;
      required uint64 available = 5;
    }

    message UnregisteredGaid {
      required string domain_agent = 1;
    }

    required AssetPair asset_pair = 1;
    required AssetType asset_type = 2;
    required uint64 amount = 3;
    required TradeDir trade_dir = 4;
    optional uint64 order_id = 5;

    oneof result {
      Success success = 10;
      LowBalance low_balance = 11;
      string error = 12;
      UnregisteredGaid unregistered_gaid = 13;
    }
  }

  message AcceptQuote {
    message Success {
      required string txid = 1;
    }

    oneof result {
      Success success = 1;
      string error = 2;
    }
  }

  message ChartsSubscribe {
    required AssetPair asset_pair = 1;
    repeated ChartPoint data = 2;
  }

  message ChartsUpdate {
    required AssetPair asset_pair = 1;
    required ChartPoint update = 2;
  }

  message LoadHistory {
    repeated HistoryOrder list = 1;
    required uint32 total = 2;
  }

  message HistoryUpdated {
    required HistoryOrder order = 1;
    required bool is_new = 2;
  }

  oneof msg {
    Login login = 17;
    Empty logout = 16;
    EnvSettings env_settings = 13;
    RegisterAmp register_amp = 8;
    UpdatedTxs updated_txs = 1;
    RemovedTxs removed_txs = 12;
    UpdatedPegs updated_pegs = 2;
    Asset new_asset = 3;
    AmpAssets amp_assets = 9;
    BalanceUpdate balance_update = 4;
    ServerStatus server_status = 5;
    PriceUpdate price_update = 6;
    Empty wallet_loaded = 7;
    Empty sync_complete = 14;
    SubscribedValue subscribed_value = 15;

    EncryptPin encrypt_pin = 10;
    DecryptPin decrypt_pin = 11;

    PeginWaitTx pegin_wait_tx = 21;
    PegOutAmount peg_out_amount = 24;
    TransItem swap_succeed = 22;
    string swap_failed = 23;

    RecvAddress recv_address = 30;
    CreateTxResult create_tx_result = 31;
    SendResult send_result = 32;
    BlindedValues blinded_values = 33;
    LoadUtxos load_utxos = 35;
    LoadAddresses load_addresses = 36;

    ShowMessage show_message = 50;
    ShowInsufficientFunds insufficient_funds = 55;

    Empty server_connected = 60;
    Empty server_disconnected = 61;
    AssetDetails asset_details = 65;

    UpdatePriceStream update_price_stream = 66;
    LocalMessage local_message = 68;

    PortfolioPrices portfolio_prices = 72;
    ConversionRates conversion_rates = 73;

    JadePorts jade_ports = 80;
    JadeStatus jade_status = 83;
    GenericResponse jade_unlock = 81;

    GaidStatus gaid_status = 91;

    MarketList market_list = 100;
    MarketInfo market_added = 101;
    AssetPair market_removed = 102;

    PublicOrders public_orders = 105;
    PublicOrder public_order_created = 106;
    OrderId public_order_removed = 107;

    MarketPrice market_price = 110;
    MinMarketAmounts min_market_amounts = 119;

    OwnOrders own_orders = 120;
    OwnOrder own_order_created = 121;
    OrderId own_order_removed = 122;

    OrderSubmit order_submit = 130;
    GenericResponse order_edit = 131;
    GenericResponse order_cancel = 132;

    StartOrder start_order = 142;
    Quote quote = 140;
    AcceptQuote accept_quote = 141;

    ChartsSubscribe charts_subscribe = 150;
    ChartsUpdate charts_update = 151;

    LoadHistory load_history = 160;
    HistoryUpdated history_updated = 161;
  }
}

message Settings {
  message AccountAsset {
    required Account account = 1;
    required string asset_id = 2;
  }

  repeated AccountAsset disabled_accounts = 1;
}
